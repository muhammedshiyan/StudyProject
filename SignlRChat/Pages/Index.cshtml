
@page

<head>
    <script src="https://www.google.com/recaptcha/api.js" async defer></script>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
   @* <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>*@
   @* <script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/chat.js"></script>
    *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.12/signalr.min.js"></script>

    <style>
        .container {
            max-width: 600px;
            margin: 0 auto;
            border: 1px solid #3498db;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .row {
            margin-bottom: 15px;
        }

        .label {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

            .label .label-text {
                flex: 1;
                font-weight: bold;
                margin-right: 10px;
            }

        .input-col {
            flex: 3;
        }

            .input-col input[type="text"],
            .input-col input[type="file"] {
                width: 100%;
                padding: 10px;
                border: 1px solid #ccc;
                border-radius: 5px;
            }

        input[type="button"] {
            padding: 10px 15px;
            background-color: #3498db;
            color: #fff;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            input[type="button"]:hover {
                background-color: #2980b9;
            }

        ul {
            list-style: none;
            padding: 0;
        }

        li {
            margin-bottom: 10px;
        }

        video {
            width: 100%;
            max-height: 300px;
        }
    </style>
    <style>
        .input-group {
            margin-bottom: 20px;
        }

        .form-control {
            width: 30%;
            margin-right: 10px;
        }

        #appendButton {
            margin-left: 10px;
        }

        #mediaContainer {
            display: flex;
            flex-wrap: wrap;
        }

            #mediaContainer img,
            #mediaContainer video,
            #mediaContainer p {
                margin: 10px;
                max-width: 300px;
                max-height: 300px;
            }
    </style>

    <style>
        .media-element {
            margin: 20px;
            padding: 10px;
            border: 1px solid #ccc;
        }

        .btn {
            margin: 5px;
        }
    </style>


    <style>
        .timeline {
            list-style: none;
            padding: 0;
        }

        .timeline-item {
            border-left: 2px solid #007bff;
            margin: 10px 0;
            padding: 10px;
        }

        .timeline-content {
            margin-left: 15px;
        }
    </style>

    <script type="text/javascript">
        var verifyCallback = function (response) {
            alert(response);
        };
        var widgetId1;
        var widgetId2;
        var onloadCallback = function () {
            // Renders the HTML element with id 'example1' as a reCAPTCHA widget.
            // The id of the reCAPTCHA widget is assigned to 'widgetId1'.
            //widgetId1 = grecaptcha.render('example1', {
            //    'sitekey': '6Lcria0nAAAAAJyrzIDZV9Qtwp-dvha-sBSzD8WZ',
            //    'theme': 'light'
            //});
            //widgetId2 = grecaptcha.render(document.getElementById('example2'), {
            //    'sitekey': '6Lcria0nAAAAAJyrzIDZV9Qtwp-dvha-sBSzD8WZ'
            //});
            grecaptcha.render('example3', {
                'sitekey': '6Lcria0nAAAAAJyrzIDZV9Qtwp-dvha-sBSzD8WZ',
                'callback': verifyCallback,
                'theme': 'dark'
            });

        };
    </script>

    <script src="https://www.google.com/recaptcha/api.js?onload=onloadCallback&render=explicit"
            async defer>
    </script>
    <style>
        .connected-users {
            position: absolute;
            top: 10px;
            right: 10px;
            border: 1px solid #ccc;
            padding: 10px;
            background-color: white;
            z-index: 9999;
        }
    </style>
</head>
<body>
    <div class="container">


        <div id="connected-users" class="connected-users">
            <h3>Connected Users</h3>
            <ul id="user-list"></ul>
            <button id="open-private-chat-btn">Open Private Chat</button>
            <select id="private-chat-user">
                <option value="">Select a user</option>
            </select>
        </div>

        <div id="connected-devices-count">Connected Devices: <span id="devices-count">0</span></div>
            
        </div>
        <div id="message-count">
            Message Count: 0
        </div>

    <div id="message-container">
        <!-- Messages will be dynamically added here -->
    </div>



        <div class="row p-1 label">
            <div class="col-1 label-text">User:</div>
            <div class="input-col"><input type="text" id="userInput" /></div>
        </div>


 @*       <div class="row p-1 label">
            <div class="col-1 label-text">Message:</div>
            <div class="input-col"><input type="text" class="w-100" id="messageInput" /></div>
        </div>
*@


        <div class="row p-1 label">
            <div class="col-1 label-text">Message:</div>
            <div class="input-col"><input type="text" class="w-100" id="messageInput" /></div>
        </div>



        <div class="row p-1">
            <div class="col-6 text-end">
                <input type="button" id="sendButton" value="Send Message" />
            </div>
        </div>
        <div class="row p-1">
            <div class="col-6">
                <hr />
            </div>
        </div>

        <div class="row p-1">
            <div class="col-6">
                <ul id="messagesList"></ul>
            </div>
        </div>


     @*   <div class="row p-1">
            <div class="col-6 text-end">
                <img src="~/images/img1.jpg" alt="Image"  width="100"  height="100"/>
                <input type="button" id="sendvideo" value="Send Video" />
            </div>
        </div>

        *@<ul class="timeline">
            <!-- Timeline items will be appended here -->
        </ul>


  @*  <form method="post" enctype="multipart/form-data" action="/FileUpload/actionupload">
        <div class="form-group">
            <label for="description">Description:</label>
            <input type="text" id="description" name="description" class="form-control" />
        </div>

        <div class="form-group">
            <label for="file">Choose a File:</label>
            <input type="file" id="file" name="file" class="form-control-file" />
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </form>
*@





        <div class="input-group">
            <input type="text" id="imageUrlInput" placeholder="Enter image URL" class="form-control">
            <input type="text" id="videoUrlInput" placeholder="Enter video URL" class="form-control">
            <input type="text" id="textContentInput" placeholder="Enter text content" class="form-control">
            
        
            <label for="file">Choose a File:</label>
            <input type="file" id="file" name="file" class="form-control-file" />
        
            <button id="appendButton" class="btn btn-primary">Append</button>
        </div>
        <div id="mediaContainer">
          

        </div>


        <div id="chat-window">
            <!-- Chat messages go here -->
        </div>
        <input type="text" id="user-id-input" placeholder="Target User ID">
        <input type="text" id="message-input" placeholder="Message">
        <button id="send-message-button">Sendtospecific</button>


 
















  
</body>
<head>
@*    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const mediaContainer = document.getElementById("mediaContainer");
            const timeline = document.querySelector(".timeline");

            function createMediaElement(url, type) {
                const mediaElement = document.createElement(type);
                mediaElement.src = url;
                mediaElement.controls = true;
                return mediaElement;
            }

            document.getElementById("appendButton").addEventListener("click", function () {
                const imageUrl = document.getElementById("imageUrlInput").value;
                const videoUrl = document.getElementById("videoUrlInput").value;
                const textContent = document.getElementById("textContentInput").value;

                const mediaElement = document.createElement("div");
                mediaElement.className = "media-element";

                if (imageUrl) {
                    const imgElement = document.createElement("img");
                    imgElement.src = imageUrl;
                    imgElement.alt = "Image";
                    mediaElement.appendChild(imgElement);
                }

                if (videoUrl) {
                    const videoElement = createMediaElement(videoUrl, "video");
                    mediaElement.appendChild(videoElement);
                }

                if (textContent) {
                    const textElement = document.createElement("p");
                    textElement.textContent = textContent;
                    mediaElement.appendChild(textElement);
                }

                // Like, Dislike, and Comment buttons
                const likeButton = document.createElement("button");
                likeButton.textContent = "Like";
                likeButton.className = "btn btn-secondary";
                mediaElement.appendChild(likeButton);

                const dislikeButton = document.createElement("button");
                dislikeButton.textContent = "Dislike";
                dislikeButton.className = "btn btn-secondary";
                mediaElement.appendChild(dislikeButton);

                const commentInput = document.createElement("input");
                commentInput.type = "text";
                commentInput.placeholder = "Enter your comment";
                commentInput.className = "form-control";
                mediaElement.appendChild(commentInput);

                const commentButton = document.createElement("button");
                commentButton.textContent = "Comment";
                commentButton.className = "btn btn-primary";
                mediaElement.appendChild(commentButton);

                // Create timeline item
                const timelineItem = document.createElement("li");
                timelineItem.className = "timeline-item";

                const timestamp = new Date().toLocaleString();
                const activityText = imageUrl ? "added an image" : videoUrl ? "added a video" : "posted text content";

                timelineItem.innerHTML = `
                        <div class="timeline-content">
                            <p><strong>User</strong> ${activityText} - ${timestamp}</p>
                        </div>
                    `;

                timeline.appendChild(timelineItem);

                mediaContainer.appendChild(mediaElement);
            });
        });
    </script>*@


 

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#videoSelector').change(function () {
                var selectedValue = $(this).val();
                var videoSource = $('#videoSource');
                var video = $('#receivedVideo');

               
                videoSource.attr('src',`~/videos/video${selectedValue}.mp4`);

               
                video[0].load();
                video[0].play();
            });
        });
    </script>

</head>



<head>
    <title>reCAPTCHA demo: Explicit render for multiple widgets</title>

</head>
<body>
    <!-- The g-recaptcha-response string displays in an alert message upon submit. -->
   @* <form action="javascript:alert(grecaptcha.getResponse(widgetId1));">
        <div id="example1"></div>
        <br>
        <input type="submit" value="getResponse">
    </form>
    <br>
    <!-- Resets reCAPTCHA widgetId2 upon submit. -->
    <form action="javascript:grecaptcha.reset(widgetId2);">
        <div id="example2"></div>
        <br>
        <input type="submit" value="reset">
    </form>*@
    <br>
    <!-- POSTs back to the page's URL upon submit with a g-recaptcha-response POST parameter. -->
    <form action="?" method="POST">

        <div id="example3"></div>
        <br>
        @*<input type="submit" value="Submit">*@
    </form>

</body>




    

@*<script src=”~/lib/notification.js”></script>*@



<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script>